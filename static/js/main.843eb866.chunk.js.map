{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RadioDisadvantage","props","handleChange","bind","e","this","onValueChange","target","value","type","name","onChange","React","Component","ValueInput","label","Calculator","state","attack","ac","adv","handleAcChange","handleAttackChange","handleAdvChange","setState","likelihoodHit","result","Number","isNaN","overZero","parseInt","Math","round","calculateHitChance","ReactDOM","render","document","getElementById"],"mappings":"4MAYeA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,WCmBRQ,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,gDAKnB,SAAaC,GACXC,KAAKJ,MAAMK,cAAcF,EAAEG,OAAOC,S,oBAGpC,WACE,OACE,gCACE,uBACEC,KAAK,QACLD,MAAM,SACNE,KAAK,MACLC,SAAUN,KAAKH,eACd,IANL,SAQE,uBACEO,KAAK,QACLD,MAAM,YACNE,KAAK,MACLC,SAAUN,KAAKH,eACd,IAbL,YAeE,uBACEO,KAAK,QACLD,MAAM,eACNE,KAAK,MACLC,SAAUN,KAAKH,eACd,IApBL,sB,GAZ0BU,IAAMC,WAuChCC,E,kDACJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,gDAKnB,SAAaC,GACXC,KAAKJ,MAAMK,cAAcF,EAAEG,OAAOC,S,oBAGpC,WACE,IAAMA,EAAQH,KAAKJ,MAAMO,MACzB,OACE,kCACGH,KAAKJ,MAAMc,MACZ,uBAAON,KAAK,SAASD,MAAOA,EAAOG,SAAUN,KAAKH,sB,GAfjCU,IAAMC,WAqBzBG,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IACDgB,MAAQ,CAAEC,OAAQ,IAAKC,GAAI,IAAKC,IAAK,UAE1C,EAAKC,eAAiB,EAAKA,eAAelB,KAApB,gBACtB,EAAKmB,mBAAqB,EAAKA,mBAAmBnB,KAAxB,gBAC1B,EAAKoB,gBAAkB,EAAKA,gBAAgBpB,KAArB,gBANN,E,kDASnB,SAAeK,GACbH,KAAKmB,SAAS,CAAEL,GAAIX,M,gCAGtB,SAAmBA,GACjBH,KAAKmB,SAAS,CAAEN,OAAQV,M,6BAG1B,SAAgBA,GACdH,KAAKmB,SAAS,CAAEJ,IAAKZ,M,oBAGvB,WACE,IAAMW,EAAKd,KAAKY,MAAME,GAChBD,EAASb,KAAKY,MAAMC,OACpBE,EAAMf,KAAKY,MAAMG,IACjBK,EA3GV,SAA4BP,EAAQC,EAAIC,GACtC,IAAIM,EAASC,OAAO,GACpB,IAAKA,OAAOC,MAAMT,KAAQQ,OAAOC,MAAMV,GAAS,CAC9C,IAAIW,EAAWF,OAAOG,SAASZ,GAAU,GAAKY,SAASX,IACnDU,EAAW,IACTA,EAAW,GACbH,EAAS,GAETA,EAASG,EAAW,GACR,cAART,EACFM,IAAmB,EAAIA,GAAUA,EAChB,iBAARN,IACTM,GAAmBA,GAAU,EAAIA,MAMzC,OAAOK,KAAKC,MAAe,IAATN,EAAe,KAAO,IAyFhBO,CAAmBf,EAAQC,EAAIC,GACrD,OACE,gCACE,cAAC,EAAD,CACEZ,MAAOU,EACPZ,cAAeD,KAAKiB,mBACpBP,MAAM,aAJV,OAOE,cAAC,EAAD,CACEP,MAAOW,EACPb,cAAeD,KAAKgB,eACpBN,MAAM,SAER,cAAC,EAAD,CAAmBT,cAAeD,KAAKkB,gBAAiBf,MAAOY,IAC/D,iDAAoBK,EAApB,e,GAzCiBb,IAAMC,WA+C/BqB,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,SAKxD9C,M","file":"static/js/main.843eb866.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nfunction calculateHitChance(attack, ac, adv) {\n  let result = Number(0);\n  if (!Number.isNaN(ac) && !Number.isNaN(attack)) {\n    let overZero = Number(parseInt(attack) + 20 - parseInt(ac));\n    if (overZero > 0) {\n      if (overZero > 19) {\n        result = 1;\n      } else {\n        result = overZero / 20;\n        if (adv === \"Advantage\") {\n          result = result + (1 - result) * result;\n        } else if (adv === \"Disadvantage\") {\n          result = result - (result * (1 - result));\n        }\n      }\n    }\n  }\n\n  return Math.round(result * 100 * 100) / 100;\n}\n\nclass RadioDisadvantage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          value=\"Normal\"\n          name=\"adv\"\n          onChange={this.handleChange}\n        />{\" \"}\n        Normal\n        <input\n          type=\"radio\"\n          value=\"Advantage\"\n          name=\"adv\"\n          onChange={this.handleChange}\n        />{\" \"}\n        Advantage\n        <input\n          type=\"radio\"\n          value=\"Disadvantage\"\n          name=\"adv\"\n          onChange={this.handleChange}\n        />{\" \"}\n        Disadvantage\n      </div>\n    );\n  }\n}\n\nclass ValueInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <label>\n        {this.props.label}\n        <input type=\"number\" value={value} onChange={this.handleChange} />\n      </label>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { attack: \"0\", ac: \"0\", adv: \"Normal\" };\n\n    this.handleAcChange = this.handleAcChange.bind(this);\n    this.handleAttackChange = this.handleAttackChange.bind(this);\n    this.handleAdvChange = this.handleAdvChange.bind(this);\n  }\n\n  handleAcChange(value) {\n    this.setState({ ac: value });\n  }\n\n  handleAttackChange(value) {\n    this.setState({ attack: value });\n  }\n\n  handleAdvChange(value) {\n    this.setState({ adv: value });\n  }\n\n  render() {\n    const ac = this.state.ac;\n    const attack = this.state.attack;\n    const adv = this.state.adv;\n    const likelihoodHit = calculateHitChance(attack, ac, adv);\n    return (\n      <div>\n        <ValueInput\n          value={attack}\n          onValueChange={this.handleAttackChange}\n          label=\"Attack: \"\n        />\n        &nbsp;\n        <ValueInput\n          value={ac}\n          onValueChange={this.handleAcChange}\n          label=\"AC: \"\n        />\n        <RadioDisadvantage onValueChange={this.handleAdvChange} value={adv} />\n        <p>Likelihood Hit: {likelihoodHit} %</p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}