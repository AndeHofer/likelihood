{"version":3,"sources":["index.js"],"names":["calculateHitChance","attack","ac","adv","sys","result","Number","isNaN","overZero","parseInt","Math","round","calculateCritChance","RadioDisadvantage","props","handleChange","bind","e","this","onValueChange","target","value","type","checked","name","onChange","React","Component","ValueInput","label","Calculator","state","handleAcChange","handleAttackChange","handleAdvChange","setState","likelihoodHitDnD","likelihoodHitPF","likelihoodCritDnD","likelihoodCritPF","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95903511.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction calculateHitChance(attack, ac, adv, sys) {\n  let result;\n  if (sys === \"DnD 5e\") {\n    if (adv === \"Normal\") {\n      result = Number(0.05);\n    } else if (adv === \"Advantage\") {\n      result = Number(0.05 + 0.95 * 0.05);\n    } else {\n      result = Number(0.05 - 0.05 * 0.95);\n    }\n  } else {\n    result = Number(0);\n  }\n\n  if (!Number.isNaN(ac) && !Number.isNaN(attack)) {\n    let overZero = Number(parseInt(attack) + 20 - parseInt(ac));\n    if (overZero > 0) {\n      if (overZero > 19) {\n        if (overZero > 29 && sys === \"PF 2e\") {\n          result = Number(1);\n        } else {\n          result = Number(0.95);\n        }\n      } else {\n        result = overZero / 20;\n        if (sys === \"DnD 5e\") {\n          if (adv === \"Advantage\") {\n            result = result + (1 - result) * result;\n          } else if (adv === \"Disadvantage\") {\n            result = result - result * (1 - result);\n          }\n        }\n      }\n    } else if (sys === \"PF 2e\" && overZero > -11) {\n      result = Number(0.05);\n    }\n  }\n\n  return Math.round(result * 100 * 100) / 100;\n}\n\nfunction calculateCritChance(attack, ac, adv, sys) {\n  let result = Number(0);\n  if (sys === \"DnD 5e\") {\n    if (adv === \"Normal\") {\n      result = Number(0.05);\n    } else if (adv === \"Advantage\") {\n      result = Number(0.05 + 0.95 * 0.05);\n    } else {\n      result = Number(0.05 - 0.05 * 0.95);\n    }\n  } else {\n    if (!Number.isNaN(ac) && !Number.isNaN(attack)) {\n      let overZero = Number(parseInt(attack) + 20 - parseInt(ac));\n      if (overZero > 0) {\n        if (overZero < 11) {\n          result = Number(0.05);\n        } else if (overZero > 29) {\n          result = Number(0.95);\n        } else {\n          result = (overZero - 10) / 20;\n        }\n      }\n    }\n  }\n\n  return Math.round(result * 100 * 100) / 100;\n}\n\nclass RadioDisadvantage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          value=\"Normal\"\n          checked={value === \"Normal\"}\n          name=\"adv\"\n          onChange={this.handleChange}\n        />\n        Normal{\" \"}\n        <input\n          type=\"radio\"\n          value=\"Advantage\"\n          checked={value === \"Advantage\"}\n          name=\"adv\"\n          onChange={this.handleChange}\n        />\n        Advantage{\" \"}\n        <input\n          type=\"radio\"\n          value=\"Disadvantage\"\n          name=\"adv\"\n          checked={value === \"Disadvantage\"}\n          onChange={this.handleChange}\n        />\n        Disadvantage{\" \"}\n      </div>\n    );\n  }\n}\n\n// class RadioSystem extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleChange = this.handleChange.bind(this);\n//   }\n\n//   handleChange(e) {\n//     this.props.onValueChange(e.target.value);\n//   }\n\n//   render() {\n//     const value = this.props.value;\n//     return (\n//       <div>\n//         <input\n//           type=\"radio\"\n//           value=\"DnD 5e\"\n//           checked={value === \"DnD 5e\"}\n//           name=\"sys\"\n//           onChange={this.handleChange}\n//         />\n//         DnD 5e{\" \"}\n//         <input\n//           type=\"radio\"\n//           value=\"PF 2e\"\n//           checked={value === \"PF 2e\"}\n//           name=\"sys\"\n//           onChange={this.handleChange}\n//         />\n//         PF 2e{\" \"}\n//       </div>\n//     );\n//   }\n// }\n\nclass ValueInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <label>\n        {this.props.label}\n        <input type=\"number\" value={value} onChange={this.handleChange} />\n      </label>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { attack: \"0\", ac: \"10\", adv: \"Normal\" };\n\n    this.handleAcChange = this.handleAcChange.bind(this);\n    this.handleAttackChange = this.handleAttackChange.bind(this);\n    this.handleAdvChange = this.handleAdvChange.bind(this);\n    // this.handleSysChange = this.handleSysChange.bind(this);\n  }\n\n  handleAcChange(value) {\n    this.setState({ ac: value });\n  }\n\n  handleAttackChange(value) {\n    this.setState({ attack: value });\n  }\n\n  handleAdvChange(value) {\n    this.setState({ adv: value });\n  }\n\n  // handleSysChange(value) {\n  //   this.setState({ sys: value });\n  // if(value === \"PF 2e\"){\n  //   this.setState({adv : \"Normal\"});\n  // }\n  // }\n\n  render() {\n    const ac = this.state.ac;\n    const attack = this.state.attack;\n    // const sys = this.state.sys;\n    const adv = this.state.adv;\n    const likelihoodHitDnD = calculateHitChance(attack, ac, adv, \"DnD 5e\");\n    const likelihoodHitPF = calculateHitChance(attack, ac, \"Normal\", \"PF 2e\");\n    const likelihoodCritDnD = calculateCritChance(attack, ac, adv, \"DnD 5e\");\n    const likelihoodCritPF = calculateCritChance(attack, ac, \"Normal\", \"PF 2e\");\n\n    return (\n      <div>\n        <div>&nbsp;</div>\n        <ValueInput\n          value={attack}\n          onValueChange={this.handleAttackChange}\n          label=\"Attack: \"\n        />\n        &nbsp;\n        <ValueInput\n          value={ac}\n          onValueChange={this.handleAcChange}\n          label=\"AC: \"\n        />\n        <div>&nbsp;</div>\n        <RadioDisadvantage onValueChange={this.handleAdvChange} value={adv} />\n        <p>\n          <div>Likelihood DnD Hit: {likelihoodHitDnD} %</div>\n          <div>Likelihood PF Hit: {likelihoodHitPF} %</div>\n          <div>&nbsp;</div>\n          <div>Likelihood DnD Crit: {likelihoodCritDnD} %</div>\n          <div>Likelihood PF Crit: {likelihoodCritPF} %</div>\n        </p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}