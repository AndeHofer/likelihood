{"version":3,"sources":["index.js"],"names":["RadioDisadvantage","props","handleChange","bind","e","this","onValueChange","target","value","type","checked","name","onChange","React","Component","RadioSystem","ValueInput","label","Calculator","state","attack","ac","adv","sys","handleAcChange","handleAttackChange","handleAdvChange","handleSysChange","setState","advElement","likelihoodHit","result","Number","isNaN","overZero","parseInt","Math","round","calculateHitChance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.620c1c50.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import reportWebVitals from \"./reportWebVitals\";\n//import 'bootstrap/dist/css/bootstrap.css';\n\nfunction calculateHitChance(attack, ac, adv) {\n  let result = Number(0);\n  if (!Number.isNaN(ac) && !Number.isNaN(attack)) {\n    let overZero = Number(parseInt(attack) + 20 - parseInt(ac));\n    if (overZero > 0) {\n      if (overZero > 19) {\n        result = 1;\n      } else {\n        result = overZero / 20;\n        if (adv === \"Advantage\") {\n          result = result + (1 - result) * result;\n        } else if (adv === \"Disadvantage\") {\n          result = result - result * (1 - result);\n        }\n      }\n    }\n  }\n\n  return Math.round(result * 100 * 100) / 100;\n}\n\nclass RadioDisadvantage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          value=\"Normal\"\n          checked={value === \"Normal\"}\n          name=\"adv\"\n          onChange={this.handleChange}\n        />\n        Normal{\" \"}\n        <input\n          type=\"radio\"\n          value=\"Advantage\"\n          checked={value === \"Advantage\"}\n          name=\"adv\"\n          onChange={this.handleChange}\n        />\n        Advantage{\" \"}\n        <input\n          type=\"radio\"\n          value=\"Disadvantage\"\n          name=\"adv\"\n          checked={value === \"Disadvantage\"}\n          onChange={this.handleChange}\n        />\n        Disadvantage{\" \"}\n      </div>\n    );\n  }\n}\n\nclass RadioSystem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          value=\"DnD 5e\"\n          checked={value === \"DnD 5e\"}\n          name=\"sys\"\n          onChange={this.handleChange}\n        />\n        DnD 5e{\" \"}\n        <input\n          type=\"radio\"\n          value=\"PF 2e\"\n          checked={value === \"PF 2e\"}\n          name=\"sys\"\n          onChange={this.handleChange}\n        />\n        PF 2e{\" \"}\n      </div>\n    );\n  }\n}\n\nclass ValueInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    const value = this.props.value;\n    return (\n      <label>\n        {this.props.label}\n        <input type=\"number\" value={value} onChange={this.handleChange} />\n      </label>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { attack: \"0\", ac: \"10\", adv: \"Normal\", sys: \"DnD 5e\" };\n\n    this.handleAcChange = this.handleAcChange.bind(this);\n    this.handleAttackChange = this.handleAttackChange.bind(this);\n    this.handleAdvChange = this.handleAdvChange.bind(this);\n    this.handleSysChange = this.handleSysChange.bind(this);\n  }\n\n  handleAcChange(value) {\n    this.setState({ ac: value });\n  }\n\n  handleAttackChange(value) {\n    this.setState({ attack: value });\n  }\n\n  handleAdvChange(value) {\n    this.setState({ adv: value });\n  }\n\n  handleSysChange(value) {\n    this.setState({ sys: value });\n    // if(value === \"PF 2e\"){\n    //   this.setState({adv : \"Normal\"});\n    // }\n  }\n\n  render() {\n    const ac = this.state.ac;\n    const attack = this.state.attack;\n    const sys = this.state.sys;\n    let adv;\n    let advElement;\n    if (sys === \"DnD 5e\") {\n      adv = this.state.adv;\n      advElement = (\n        <RadioDisadvantage onValueChange={this.handleAdvChange} value={adv}  />\n      );\n    } else {\n      adv = \"Normal\";\n      advElement = <div>&nbsp;</div>;\n    }\n    const likelihoodHit = calculateHitChance(attack, ac, adv);\n\n    return (\n      <div>\n        <RadioSystem onValueChange={this.handleSysChange} value={sys} />\n        <div>&nbsp;</div>\n        <ValueInput\n          value={attack}\n          onValueChange={this.handleAttackChange}\n          label=\"Attack: \"\n        />\n        &nbsp;\n        <ValueInput\n          value={ac}\n          onValueChange={this.handleAcChange}\n          label=\"AC:\"\n        />\n        <div>&nbsp;</div>\n        {advElement}\n        <p>Likelihood Hit: {likelihoodHit} %</p>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}